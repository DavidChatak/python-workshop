AWSTemplateFormatVersion: 2010-09-09
Description: |
  David-Cloudformation template for milliseconds converter application
  This app runs on application load balancer
Resources:
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for ALB #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  ProjectSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: SG for project2 #required
      GroupName: secGrupofMillisecondproject2
      SecurityGroupIngress:
        - IpProtocol: TCP
          ToPort: 80
          FromPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
        - IpProtocol: TCP
          ToPort: 22
          FromPort: 22
          CidrIp: 0.0.0.0/0

  MillisecondProjectLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: ami-00077e3fed5089981
        InstanceType: t2.micro
        KeyName: AWS_PEMkey
        SecurityGroupIds: 
          - !GetAtt ProjectSecGroup.GroupId
        TagSpecifications: 
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack
        UserData: !Base64 |
          #!/bin/bash
          sudo yum update -y
          sudo yum install python3 -y
          sudo pip3 install flask
          sudo wget https://raw.githubusercontent.com/DavidChatak/python-workshop/master/projects/project-2/templates/index.html -P /home/ec2-user/templates
          sudo wget https://raw.githubusercontent.com/DavidChatak/python-workshop/master/projects/project-2/templates/result.html -P /home/ec2-user/templates
          sudo wget https://raw.githubusercontent.com/DavidChatak/python-workshop/master/projects/project-2/app.py -P /home/ec2-user
          sudo python3  /home/ec2-user/app.py

    
  ProjectTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: millisecondsProjectTargetGroup
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt ProjectSecGroup.VpcId
  
  ProjectLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4 
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ProjectSecGroup.GroupId
      Subnets:
        - subnet-de0c31b7
        - subnet-b881d5c3
        - subnet-9fbf26d2
      Type: application
  
  ELBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref ProjectTargetGroup
          Type: forward
      LoadBalancerArn: !Ref  ProjectLoadBalancer #required
      Port: 80 #required
      Protocol: HTTP #required
  
  MillisecondProjectASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: MillisecondProjectASGroup
      AvailabilityZones:
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref MillisecondProjectLaunchTemplate
        Version: !GetAtt MillisecondProjectLaunchTemplate.LatestVersionNumber
      LoadBalancerNames:
        - ProjectLoadBalancer
      MaxSize: 3 #required
      MinSize: 2 #required
      TargetGroupARNs:
        - !Ref ProjectTargetGroup
  
  
  
Outputs:
  WebsiteURL:
    Description: Milliseconds Converter Application Load Balancer URL
    Value: !Sub 
      - http://${ALBaddress}
      - ALBaddress: !GetAtt ProjectLoadBalancer.DNSName